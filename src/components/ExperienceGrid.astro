---
export interface Workplace {
  time: string;
  name: string;
  role: string;
  tag: string;
}

interface Props {
  workplaces: Workplace[];
}

const { workplaces } = Astro.props;
---

<div class="experience-grid">
  {
    workplaces.map(({ name, tag, time, role }) => {
      return (
        <div class="workplace-wrapper">
          <span class="time">{time}</span>
          <span class="name">{name}</span>
          <span class="role">{role}</span>
          <span class="pill">{tag}</span>
        </div>
      );
    })
  }
</div>

<style>
  .experience-grid {
    display: grid;
    grid-template-columns: 1fr;
    justify-content: space-between;
    justify-items: center;
    align-items: center;
    width: 100%;
    padding: 2.5rem;
    color: var(--clr-accent-200);
    gap:5rem;

    .name {
      font-weight: 500;
      color: black;
      font-size: 1.375rem;
    }

    .workplace-wrapper {
      display: flex;
      flex-direction: column;
      align-items: center;
      gap: 0.75rem;
    }

    .role,
    .time {
      font-size: 0.875rem;
    }
  }

  @media (min-width: 800px) {
    .experience-grid {
      grid-template-columns: 1fr 1fr;
    }
  }

  @media (min-width: 1100px) {
    .experience-grid {
      grid-template-columns: 1fr 1fr 1fr;
    }
  }
</style>
